name: "Build downloadable Rust image"

on:
  push:
    paths:
    - "Cargo.toml"
    - "**.rs"
    - ".github/workflows/build_rust_image.yml"

jobs:
  build_rust_image:
    name: "Build downloadable Rust image for Windows"
    runs-on: windows-latest
    steps:

#    - uses: actions/checkout@master

#    - name: "Remove Rust documentation"
#      run: rustup component remove rust-docs

#    - name: "Update Rust to the latest stable version"
#      run: rustup update stable

#    - name: "Install cargo-wix; clone"
#      run: git clone https://github.com/Coding-Badly/cargo-wix.git

#    - name: "Install cargo-wix; install"
#      run: cargo install --path cargo-wix

#    - name: "Download all dependencies"
#      run: cargo fetch

    - name: "Archive .cargo"
      run: 7z a -bt -t7z -m0=lzma2 -mx=9 -r cargo.7z "$Env:USERPROFILE/.cargo/*"

    - name: "Archive .rustup"
      run: 7z a -bt -t7z -m0=lzma2 -mx=9 -r rustup.7z "$Env:USERPROFILE/.rustup/*"

    - name: "Create release"
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "0.1.1"
        release_name: "Release ${{ github.sha }}"
        body: "Second automatic release."
        draft: false
        prerelease: false

    - name: "Upload cargo.7z"
      id: upload-release-asset-cargo
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./cargo.7z
        asset_name: cargo.7z
        asset_content_type: application/x-7z-compressed

    - name: "Upload rustup.7z"
      id: upload-release-asset-rustup
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./rustup.7z
        asset_name: rustup.7z
        asset_content_type: application/x-7z-compressed
